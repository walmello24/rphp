# this file is about the PHP server class

class Rphp::Server
	require 'fileutils'
	require 'listen'
	require 'tilt'

	attr_accessor :port, :input, :output

	def initialize(port = 4321)
		@port = port
		@input = 'ruby'
		@output = 'public_html'
	end

	def generate_initial_files
		Dir.mkdir @input unless Dir.exist?(@input)
		Dir.mkdir @output unless Dir.exist?(@output)
		File.write(
			"#{@input}/index.php.erb", 
			"<h1>Generated by RPHP</h1>"
			) unless File.exist?("#{@input}/index.php.erb")
	end

	def parse_file (input,output)
		if output.split('/') == 3
			output = output.split('/')[1..-1]
				.join('/')
				.split('.')[0..-2]
				.join('.')
		end
			
		if Tilt.templates_for(input).any?
			content = Tilt.new(input).render
		else
			content = File.read(input)
		end
		File.write(output,content)
	end

	def start
		puts "PHP development server started at port #{@port}"
		`nohup php -S localhost:#{@port} -t #{@output} >/dev/null 2>&1 &`
		listen
	end

	def parse_folder folder_name
		Dir["#{folder_name}"].each do |file|
			filename = file.split('/')[2..-1].join('/')
			if File.directory? file	
				file = "./#{@input}/#{filename}"
				out  = "./#{@output}/#{filename}"
				FileUtils.rm_rf(out)
				Dir.mkdir out unless Dir.exist? out
				parse_folder "#{file}/*"
			else
				file = "./#{@input}/#{filename}"
				out  = "./#{@output}/#{filename}"
				parse_file(file, out)
			end
		end
	end

	def listen
		FileUtils.rm_rf(@output)
		generate_initial_files
		parse_folder "./#{@input}/*"
		listener = Listen.to(@input) do |modified, added, removed|
			parse_folder "./#{@input}/*"
		end
		listener.start # not blocking
		sleep
	end
end